export const isNull = (data, isNull) => (data == null) || (isNull?.(data) ?? false);
export const notNull = (data, _default, isNull) => (data == null) || (isNull?.(data) ?? false) ? _default : data;
/**
 * Returns true if 'data' is a string or nullish.
 *
 * @param data value to check
 * @returns
 */
export const isStrNull = (data) => typeof data == "string" || data == undefined || data == null;
/**
 * Error if 'data' is not a string or nullish. If 'data'
 *   is nullish returns '_default', otherwise it returns 'data'.
 *
 * @param data value to check and convert
 * @param _default default returned value
 * @returns
 */
export const notStrNull = (data, _default) => {
    if (!isStrNull(data))
        throw new Error(`${data}" is not a string or nullish.`, { cause: "notStrNull" });
    else
        return !data ? _default : data;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVsbGlzaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1vYXV0aDItb2lkYy9zcmMvdXRpbHMvbnVsbGlzaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsQ0FBSSxJQUFPLEVBQUUsTUFBMEIsRUFBRSxFQUFFLENBQzdELENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxDQUFDLENBQUM7QUFFaEQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQUksSUFBTyxFQUFFLFFBQVcsRUFBRSxNQUEwQixFQUFFLEVBQUUsQ0FDM0UsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFFbEU7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsQ0FBQyxJQUFhLEVBQUUsRUFBRSxDQUN2QyxPQUFPLElBQUksSUFBSSxRQUFRLElBQUksSUFBSSxJQUFJLFNBQVMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDO0FBRWpFOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxJQUFhLEVBQUUsUUFBZ0IsRUFBRSxFQUFFO0lBQzFELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1FBQ2hCLE1BQU0sSUFBSSxLQUFLLENBQ1gsR0FBRyxJQUFJLCtCQUErQixFQUN0QyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsQ0FDMUIsQ0FBQzs7UUFFRCxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQWMsQ0FBQztBQUNsRCxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgaXNOdWxsID0gPFQ+KGRhdGE6IFQsIGlzTnVsbD86ICh2OiBUKSA9PiBib29sZWFuKSA9PlxuICAgIChkYXRhID09IG51bGwpIHx8IChpc051bGw/LihkYXRhKSA/PyBmYWxzZSk7XG5cbmV4cG9ydCBjb25zdCBub3ROdWxsID0gPFQ+KGRhdGE6IFQsIF9kZWZhdWx0OiBULCBpc051bGw/OiAodjogVCkgPT4gYm9vbGVhbikgPT5cbiAgICAoZGF0YSA9PSBudWxsKSB8fCAoaXNOdWxsPy4oZGF0YSkgPz8gZmFsc2UpID8gX2RlZmF1bHQgOiBkYXRhO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiAnZGF0YScgaXMgYSBzdHJpbmcgb3IgbnVsbGlzaC5cbiAqXG4gKiBAcGFyYW0gZGF0YSB2YWx1ZSB0byBjaGVja1xuICogQHJldHVybnNcbiAqL1xuZXhwb3J0IGNvbnN0IGlzU3RyTnVsbCA9IChkYXRhOiB1bmtub3duKSA9PlxuICAgIHR5cGVvZiBkYXRhID09IFwic3RyaW5nXCIgfHwgZGF0YSA9PSB1bmRlZmluZWQgfHwgZGF0YSA9PSBudWxsO1xuXG4vKipcbiAqIEVycm9yIGlmICdkYXRhJyBpcyBub3QgYSBzdHJpbmcgb3IgbnVsbGlzaC4gSWYgJ2RhdGEnXG4gKiAgIGlzIG51bGxpc2ggcmV0dXJucyAnX2RlZmF1bHQnLCBvdGhlcndpc2UgaXQgcmV0dXJucyAnZGF0YScuXG4gKlxuICogQHBhcmFtIGRhdGEgdmFsdWUgdG8gY2hlY2sgYW5kIGNvbnZlcnRcbiAqIEBwYXJhbSBfZGVmYXVsdCBkZWZhdWx0IHJldHVybmVkIHZhbHVlXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgY29uc3Qgbm90U3RyTnVsbCA9IChkYXRhOiB1bmtub3duLCBfZGVmYXVsdDogc3RyaW5nKSA9PiB7XG4gICAgaWYgKCFpc1N0ck51bGwoZGF0YSkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIGAke2RhdGF9XCIgaXMgbm90IGEgc3RyaW5nIG9yIG51bGxpc2guYCxcbiAgICAgICAgICAgIHsgY2F1c2U6IFwibm90U3RyTnVsbFwiIH1cbiAgICAgICAgKTtcblxuICAgIGVsc2UgcmV0dXJuICFkYXRhID8gX2RlZmF1bHQgOiBkYXRhIGFzIHN0cmluZztcbn1cbiJdfQ==