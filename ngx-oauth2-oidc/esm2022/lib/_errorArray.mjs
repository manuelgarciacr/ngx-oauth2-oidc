import { JOSEError } from "jose/errors";
import { HttpErrorResponse } from "@angular/common/http";
export const _errorArray = (err) => {
    const isHttpError = err instanceof HttpErrorResponse;
    const isOAuth2Error = isHttpError && !!err.error.error;
    const isJOSEError = err instanceof JOSEError;
    const error = isOAuth2Error
        ? [[err.error.error, err.error.error_description]]
        : isHttpError
            ? [
                [
                    err.statusText,
                    err.message,
                ],
            ]
            : isJOSEError
                ? [[err.name, err.message]]
                : err.cause
                    ? [[err.cause, err.message]]
                    : err.name
                        ? [[err.name, err.message]]
                        : typeof err == "object"
                            ? Object.entries(err ?? {})
                            : [[(err ?? "").toString(), ""]];
    return error;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX2Vycm9yQXJyYXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtb2F1dGgyLW9pZGMvc3JjL2xpYi9fZXJyb3JBcnJheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXpELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLEdBQVksRUFBbUIsRUFBRTtJQUN6RCxNQUFNLFdBQVcsR0FBRyxHQUFHLFlBQVksaUJBQWlCLENBQUM7SUFDckQsTUFBTSxhQUFhLEdBQUcsV0FBVyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUN2RCxNQUFNLFdBQVcsR0FBRyxHQUFHLFlBQVksU0FBUyxDQUFDO0lBRTdDLE1BQU0sS0FBSyxHQUFvQixhQUFhO1FBQ3hDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2xELENBQUMsQ0FBQyxXQUFXO1lBQ2IsQ0FBQyxDQUFDO2dCQUNJO29CQUNLLEdBQXlCLENBQUMsVUFBVTtvQkFDcEMsR0FBeUIsQ0FBQyxPQUFPO2lCQUNyQzthQUNKO1lBQ0gsQ0FBQyxDQUFDLFdBQVc7Z0JBQ2IsQ0FBQyxDQUFDLENBQUMsQ0FBRSxHQUFpQixDQUFDLElBQUksRUFBRyxHQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUN6RCxDQUFDLENBQUUsR0FBYSxDQUFDLEtBQUs7b0JBQ3RCLENBQUMsQ0FBQyxDQUFDLENBQUUsR0FBYSxDQUFDLEtBQUssRUFBRyxHQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7b0JBQ2xELENBQUMsQ0FBRSxHQUFhLENBQUMsSUFBSTt3QkFDckIsQ0FBQyxDQUFDLENBQUMsQ0FBRSxHQUFhLENBQUMsSUFBSSxFQUFHLEdBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQzt3QkFDakQsQ0FBQyxDQUFDLE9BQU8sR0FBRyxJQUFJLFFBQVE7NEJBQ3hCLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUM7NEJBQzNCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNyQyxPQUFPLEtBQUssQ0FBQztBQUNqQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKT1NFRXJyb3IgfSBmcm9tIFwiam9zZS9lcnJvcnNcIjtcbmltcG9ydCB7IEh0dHBFcnJvclJlc3BvbnNlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9odHRwXCI7XG5cbmV4cG9ydCBjb25zdCBfZXJyb3JBcnJheSA9IChlcnI6IHVua25vd24pOiBbc3RyaW5nLCBhbnldW10gPT4ge1xuICAgIGNvbnN0IGlzSHR0cEVycm9yID0gZXJyIGluc3RhbmNlb2YgSHR0cEVycm9yUmVzcG9uc2U7XG4gICAgY29uc3QgaXNPQXV0aDJFcnJvciA9IGlzSHR0cEVycm9yICYmICEhZXJyLmVycm9yLmVycm9yO1xuICAgIGNvbnN0IGlzSk9TRUVycm9yID0gZXJyIGluc3RhbmNlb2YgSk9TRUVycm9yO1xuXG4gICAgY29uc3QgZXJyb3I6IFtzdHJpbmcsIGFueV1bXSA9IGlzT0F1dGgyRXJyb3JcbiAgICAgICAgPyBbW2Vyci5lcnJvci5lcnJvciwgZXJyLmVycm9yLmVycm9yX2Rlc2NyaXB0aW9uXV1cbiAgICAgICAgOiBpc0h0dHBFcnJvclxuICAgICAgICA/IFtcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgKGVyciBhcyBIdHRwRXJyb3JSZXNwb25zZSkuc3RhdHVzVGV4dCxcbiAgICAgICAgICAgICAgICAgIChlcnIgYXMgSHR0cEVycm9yUmVzcG9uc2UpLm1lc3NhZ2UsXG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgXVxuICAgICAgICA6IGlzSk9TRUVycm9yXG4gICAgICAgID8gW1soZXJyIGFzIEpPU0VFcnJvcikubmFtZSwgKGVyciBhcyBKT1NFRXJyb3IpLm1lc3NhZ2VdXVxuICAgICAgICA6IChlcnIgYXMgRXJyb3IpLmNhdXNlXG4gICAgICAgID8gW1soZXJyIGFzIEVycm9yKS5jYXVzZSwgKGVyciBhcyBFcnJvcikubWVzc2FnZV1dXG4gICAgICAgIDogKGVyciBhcyBFcnJvcikubmFtZVxuICAgICAgICA/IFtbKGVyciBhcyBFcnJvcikubmFtZSwgKGVyciBhcyBFcnJvcikubWVzc2FnZV1dXG4gICAgICAgIDogdHlwZW9mIGVyciA9PSBcIm9iamVjdFwiXG4gICAgICAgID8gT2JqZWN0LmVudHJpZXMoZXJyID8/IHt9KVxuICAgICAgICA6IFtbKGVyciA/PyBcIlwiKS50b1N0cmluZygpLCBcIlwiXV07XG4gICAgcmV0dXJuIGVycm9yO1xufTtcbiJdfQ==